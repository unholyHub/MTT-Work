<!doctype html>  
<html>
    <head>
        <!--[if gte IE 9]>
            <style type="text/css">
              .gradient {
                 filter: none;
              }
            </style>
        <![endif]-->
        <link type="text/css" rel="stylesheet" media="all" href="./stylesheets/style.css">
        <link type="text/css" rel="stylesheet" href="./rmm-css/responsivemobilemenu.css" />
        <meta  http-equiv="Content-Type" content="text/html; charset=utf-8">
        <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no"/>
        <link rel="stylesheet" href="http://code.jquery.com/ui/1.10.3/themes/smoothness/jquery-ui.css" />
        <link rel="icon" type="image/png" href="./images/icon.png" />
        <script src="http://code.jquery.com/jquery-1.6.4.min.js"></script>
        <script type="text/javascript" src="./js/ga.js"></script>
        <script src="http://code.jquery.com/ui/1.10.3/jquery-ui.js"></script>
        <script type="text/javascript" src="./js/administration.js"></script>
        <script type="text/javascript" src="./rmm-js/responsivemobilemenu.js"></script>
        <title>BTMS Administration version 1.1.3</title>
        <script type="text/javascript">
            jQuery(document).ready(function($) {

                $(".datepicker").datepicker({dateFormat: 'yy-mm-dd'}).val();

                var i = 1;
                $(".js-table-row").each(function() {
                    var newClass = 'green';

                    if (i % 6 == 1) {
                        newClass = 'gray';
                    }

                    if (i % 6 == 2) {
                        newClass = 'gray';
                    }

                    if (i % 6 == 3) {
                        newClass = 'gray';
                    }
                    $(this).addClass(newClass);

                    i++;
                });

                $('.js-label-group-button').each(function() {
                    groupButtonsManipulation($(this));
                });
                
                $('.js-label-group-button').click(function() {
                    groupButtonsManipulation($(this));
                });


//                    var d = document;
//                    var safari = (navigator.userAgent.toLowerCase().indexOf('safari') != -1) ? true : false;
//                    var gebtn = function(parEl, child) {
//                        return parEl.getElementsByTagName(child);
//                    };
//                    onload = function() {
//
//                        var body = gebtn(d, 'body')[0];
//                        body.className = body.className && body.className != '' ? body.className + ' has-js' : 'has-js';
//
//                        if (!d.getElementById || !d.createTextNode)
//                            return;
//                        var ls = gebtn(d, 'label');
//                        for (var i = 0; i < ls.length; i++) {
//                            var l = ls[i];
//                            if (l.className.indexOf('label_') == -1)
//                                continue;
//                            var inp = gebtn(l, 'input')[0];
//                            if (l.className == 'label_check') {
//                                l.className = (safari && inp.checked == true || inp.checked) ? 'label_check c_on' : 'label_check c_off';
//                                l.onclick = check_it;
//                            }
//                            ;
//                            if (l.className == 'label_radio') {
//                                l.className = (safari && inp.checked == true || inp.checked) ? 'label_radio r_on' : 'label_radio r_off';
//                                l.onclick = turn_radio;
//                            }
//                            ;
//                        }
//                        ;
//                    };
//                    var check_it = function() {
//                        var inp = gebtn(this, 'input')[0];
//                        if (this.className == 'label_check c_off' || (!safari && inp.checked)) {
//                            this.className = 'label_check c_on';
//                            if (safari)
//                                inp.click();
//                        } else {
//                            this.className = 'label_check c_off';
//                            if (safari)
//                                inp.click();
//                        }
//                        ;
//                    };
//                    var turn_radio = function() {
//                        var inp = gebtn(this, 'input')[0];
//                        if (this.className == 'label_radio r_off' || inp.checked) {
//                            var ls = gebtn(this.parentNode, 'label');
//                            for (var i = 0; i < ls.length; i++) {
//                                var l = ls[i];
//                                if (l.className.indexOf('label_radio') == -1)
//                                    continue;
//                                l.className = 'label_radio r_off';
//                            }
//                            ;
//                            this.className = 'label_radio r_on';
//                            if (safari)
//                                inp.click();
//                        } else {
//                            this.className = 'label_radio r_off';
//                            if (safari)
//                                inp.click();
//                        }
//                        ;
//                    };



                var pageTracker = _gat._getTracker("UA-301801-11");
                pageTracker._trackPageview();

                $("a > button").live('click', function() {
                    location.href = $(this).closest("a").attr("href");
                }); // fixed
                $("a > submit").live('click', function() {
                    location.href = $(this).closest("a").attr("href");
                }); // fixed    


            });

            function groupButtonsManipulation(wrapper) {
                // Get input checkbox or radio button
                var groupButton = wrapper.find('input');
                // Check group button - . is() - :checked, :visible, :hidden 
                if (groupButton.is(':checked')) {
                    wrapper.addClass('has-js-label-checkbox-on');
                    wrapper.removeClass('has-js-label-checkbox-off');
                    groupButton.prop('checked', true);
                } else {
                    wrapper.addClass('has-js-label-checkbox-off');
                    wrapper.removeClass('has-js-label-checkbox-on');
                    groupButton.prop('checked', false);
                }
            }
            
        </script>
    </head>
    <body>
        <div align="center" class="wrapper">
            <header>
                <nav class="display-none">
                    <div class="rmm">
                        {{menu}}
                    </div>
                </nav>
            </header>            
            <div class="contents">
                <div class="scrollable">
                    <!-- начало на информационната част-->
                    {{page_contents}}
                    <!-- край на информационната част-->
                </div>
            </div>            
        </div>

    </body>
</html>